name: Build CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

#env:
#  GITHUB_ACTOR: ${{ github.actor }}
#  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-services:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout with all branches and tags
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Java 15
        uses: joschi/setup-jdk@v2
        with:
          java-version: '15'

      - name: Compile
        run: ./gradlew version classes

      - name: Test
        run: ./gradlew test -x bootBuildInfo

      - name: Containerize
        run: ./gradlew jib \
          -Djib.to.auth.username=${{ secrets.DOCKER_USR }} \
          -Djib.to.auth.password=${{ secrets.DOCKER_PSW }} \
          -Djib.console='plain' \
          -x bootBuildInfo

  #      - name: Analyse
  #        if: github.ref == 'refs/heads/master'
  #        run: ./gradlew sonarqube -Dsonar.login=${{ secrets.SONAR_LOGIN }} -x test
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-web:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: [ 'web/nihongo-dico-web' ]

    defaults:
      run:
        working-directory: ${{ matrix.project }}

    steps:
      - name: Checkout with all branches and tags
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.project }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.project }}-

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: npm install, build, and test
        run: |
          npm ci
          npm run build:ci
        env:
          CI: true

      - name: Publish Docker
        uses: elgohr/Publish-Docker-Github-Action@2.11
        with:
#          fixme dynamic
          name: frognihongo/nihongo-dico-web
          username: ${{ secrets.DOCKER_USR }}
          password: ${{ secrets.DOCKER_PSW }}
          dockerfile: ${{ matrix.project }}/Dockerfile
          tag_names: true
